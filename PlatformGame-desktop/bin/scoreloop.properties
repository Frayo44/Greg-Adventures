# scoreloop.properties ---------------------------------------------------------
#
# Date:              2014-05-23
# About:             This file configures ScoreloopCore and ScoreloopUI to match
#                    the settings you made on the developer site.
# Instructions:      Add this file to the /assets folder of your game project.
# Notes:             You might want to enable some of the commented out
#                    properties to change the property from the default value to
#                    a non-default setting.
#
# ScoreloopClient properties ---------------------------------------------------
#

# The game ID assigned to your game by Scoreloop (do not modify this)
game.id = f34791df-0b9f-44ab-9b92-839b0b980034

# The name of your game (provided by you when registering your game)
game.name = Pinky's Adventures

# The version of your game (game version should be 1.0 or above)
game.version = 1.0

# If your game supports multiple modes specify the minimum and maximum modes
# here. By default, every game has one mode. To add more modes, modify the
# game.mode.max. Note that the maximum is not inclusive, (i.e. min=0, max=3
# defines modes 0, 1, and 2).
  game.mode.min = 0
  game.mode.max = 1

# In order to sort local scores, you have to define a score ordering.
# default = result=desc;minorResult=desc;level=desc
# scores can be ordered by three columns: result, minorResult and level
# if a column is not specified it will be ignored for ordering
game.score.ordering = level=desc;result=desc;minor_result=desc

# The number of Scores that should be stored in the Local Leaderboard.
# set to 0 to disable the local leaderboard (default is 20)
local.leaderboard.max.scores = 20

# In case of network error while submitting a score, the score is saved locally and
# a SubmitScoreException is thrown.
# These scores can be resubmitted by using
# - ScoreloopCore: ScoresController.loadLocalScoresToSubmit()
# - ScoreloopUI: StandardScoreloopManager.submitLocalScores()
# The default value is false
network.offline.support.score = true

# Your game-specific currency code (do not modify this)
currency.code = DPR

# The currency symbol as it will appear in the UI (you may modify this).
currency.symbol = C

# The singular and plural forms of your currency (you may modify these).
currency.name.singular = Coin
currency.name.plural = Coins

# Uncomment the following properties to enable the corresponding payment providers (default is false)
#payment.creditcard = true
#payment.paypalx = true
#payment.fortumo = true
#payment.googlemarket = true
#payment.googlecheckout = true
#payment.slvirtualcurrency = true

# This is the specification of the score formatter. Consult the ScoreFormatter
# documentation for details. ScoreloopUI specific Score formatting settings can be
# found below.
#format.score = DefaultFormat=%r;mode:0=A;mode:1=B;mode:2=C;

# This property defines the default format for in-game currency values.
# Consult the MoneyFormatter documentation and
# http://developer.android.com/reference/java/util/Formatter.html for
# more information about formatting conventions.
#format.money = %.2f %s

# ScoreloopUI properties -------------------------------------------------------
#

# Set this value to true to enable challenges when using ScoreloopUI. (default
# is false)
#ui.feature.challenge = true

# Set this value to true to enable awards and achievements when using ScoreloopUI.
# (default is false)
#ui.feature.achievement = true

# Set this value to true to enable the news feature when using ScoreloopUI.
# (default is false)
#ui.feature.news = true

# By default, ScoreloopUI enables access to the local device address book. This
# lets Scoreloop check for other Scoreloop users in your address book and  add
# them to your buddy-list. If you wish to disable this feature, set this to false.
# If this feature is disabled, you may also remove the READ_CONTACTS permission
# from the AndroidManifest.xml
#ui.feature.address_book = false

# Use this property to say if you want scoreloop to synchronize achievements
# with the server before you can access them. Set to false if you want to make
# achievements without this initial synchronization. (default is true)
#ui.feature.achievement.forceSync = false

# If you want to use the payment feature in the ui, you have to uncomment the following (default is false).
#ui.feature.payment = true

# The following properties allow you to say what elements of a score should
# be output in the given screen. e.g. show score and level in the leaderboards
#ui.format.score.leaderboard = ScoresAndLevelFormat
#ui.format.score.challenges = LevelAndModeFormat
#ui.format.score.socialnetworkpost = DefaultFormat

